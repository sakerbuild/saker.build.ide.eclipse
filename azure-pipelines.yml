trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    set -e
    TAGVER=$(echo $BUILD_SOURCEBRANCHNAME | sed -r 's/v(.*)/\1/')
    sed -i -s "s/111.222.333.qualifier/$TAGVER.qualifier/g" META-INF/MANIFEST.MF
    echo "New version: $(cat META-INF/MANIFEST.MF | grep 'Bundle-Version:')"
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
  displayName: 'Replace Bundle-Version'
- script: |
    set -e
    echo "##vso[task.setvariable variable=BUILD_VERSION_NUMBER]$(cat META-INF/MANIFEST.MF | grep Bundle-Version: | sed -r 's/Bundle-Version: (.*)\.qualifier/\1/')"
  displayName: 'Set BUILD_VERSION_NUMBER'
- script: |
    set -e
    TAGVER=$(echo $BUILD_SOURCEBRANCHNAME | sed -r 's/v(.*)/\1/')
    if [ $(BUILD_VERSION_NUMBER) != "$TAGVER" ]; then
      echo "Bundle-Version: $(BUILD_VERSION_NUMBER) doesn't match tag version: $TAGVER"
      exit 1
    fi
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
  displayName: 'Check version number - tag consistency '
- script: |
    set -e
    curl https://ftp.halifax.rwth-aachen.de/eclipse/technology/epp/downloads/release/2022-06/R/eclipse-rcp-2022-06-R-linux-gtk-x86_64.tar.gz -o eclipse.tar.gz
    tar -xzf "eclipse.tar.gz"
  displayName: 'Download Eclipse'
- script: |
    set -e
    eclipse/eclipse -nosplash  -application org.eclipse.ant.core.antRunner -data .. -verbose -buildfile build.xml -DbuildTempFolder=build/temp -DbuildDirectory=build -Dbuild.result.folder=build/res -Dplugin.destination=build/plugin -DbuildVersionNumber=$BUILD_VERSION_NUMBER build.update.jar
  displayName: 'Build update jar'
  
- script: |
    set -e
    mkdir gh-release
    cp build/plugin/saker.build.ide.eclipse.jar gh-release/
    cp build/plugin/saker.build.ide.eclipse.ver gh-release/
    cp update-site/features/feature.xml gh-release/
    cp update-site/category.xml gh-release/
  displayName: 'Setup GitHub Release'
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    pathtoPublish: gh-release/
    artifactName: saker.build.ide.eclipse

- task: GithubRelease@0
  displayName: 'Create GitHub Release'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  inputs:
    gitHubConnection: saker.build.ide.eclipse-ci-release-push-2
    repositoryName: sakerbuild/saker.build.ide.eclipse
    assets: gh-release/*
